{"version":3,"sources":["../src/index.js"],"names":["RESTDataSource","require","autoBind","FinancialModelingPrepAPI","constructor","config","baseURL","initialize","encode_argument","arg","Array","isArray","length","map","encodeURI","join","get","strings","params","path","reduce","o","n","i","rest","parseBody","response","data","parse","String","number_cast","Number","isNaN","mapped_data","d","hasOwnProperty","company_profile","symbol","quote","id","validate_search_exchange_parameter","exchange","exchange_parameters","includes","ReferenceError","URI","search","query","searchParams","financials_income_statement","financials_balance_sheet_statement","financials_cash_flow_statement","financial_ratios","enterprise_value","company_key_metrics","financial_statement_growth","company_rating","company_discounted_cash_flow","company_historical_discounted_cash_flow","company_stock_list","stock_real_time_price","validate_historical_chart_interval","interval","historical_chart_intervals","historical_chart","validate_historical_price_full_serietype","serietype","historical_price_full_serietypes","validate_historical_price_full_group","group","historical_price_full_groups","historical_price_full","group_path","majors_indexes","quotes","symbol_available_indexes","quotes_commodity","commodity","historical_chart_PRNT","PRNT","validate_stock_groups","stock_groups","stock","is_the_market_open","cryptocurrencies","cryptocurrency","validate_symbol_group","symbol_groups","forex","currency_pair","module","exports"],"mappings":"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","sourcesContent":["/* DOCUMENT INFORMATION\n\t- Author:   Dominik Maszczyk\n\t- Email:    Skitionek@gmail.com\n\t- Created:  22/04/2020\n*/\n\nconst { RESTDataSource } = require(\"apollo-datasource-rest\");\nconst autoBind = require('auto-bind');\n\n/**\n * The FinancialModelingPrep core module.\n */\nclass FinancialModelingPrepAPI extends RESTDataSource {\n\tconstructor(config) {//\n\t\tsuper();\n\t\tthis.baseURL = `https://financialmodelingprep.com/api/v3/`;\n\t\tthis.initialize(config || {});\n\t\tautoBind(this);\n\t}\n\n\tencode_argument(arg) {\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn arg.length ? arg.map(encodeURI).join(',') : '';\n\t\t}\n\t\treturn encodeURI(arg || '')\n\t}\n\n\tget(strings, ...params) {\n\t\tconst path = strings.reduce((o, n, i) => o + n + this.encode_argument(params[i]), '');\n\t\treturn (...rest) => super.get(path, ...rest)\n\t}\n\n\tasync parseBody(response) {\n\t\tconst data = await super.parseBody(response);\n\t\treturn this.parse(data);\n\t}\n\n\tparse(data) {\n\t\tif (typeof data === 'string' || data instanceof String) {\n\t\t\tconst number_cast = Number(data);\n\t\t\treturn Number.isNaN(number_cast) ? data : number_cast\n\t\t}\n\t\tif (Array.isArray(data)) {\n\t\t\treturn data.map(this.parse)\n\t\t}\n\t\tif (typeof data === 'object' && data !== null) {\n\t\t\tconst mapped_data = {};\n\t\t\tfor (const d in data) {\n\t\t\t\tif (data.hasOwnProperty(d)) {\n\t\t\t\t\tmapped_data[d] = this.parse(data[d])\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn mapped_data\n\t\t}\n\t\treturn data\n\t}\n\n\tasync company_profile(symbol) {\n\t\treturn this.get`company/profile/${symbol}`()\n\t}\n\n\tasync quote(id) {\n\t\treturn this.get`quote/${id}`()\n\t}\n\n\texchange_parameters = [\"ETF\", \"MUTUAL_FUND\", \"COMMODITY\", \"INDEX\", \"CRYPTO\", \"FOREX\", \"TSX\", \"AMEX\", \"NASDAQ\", \"NYSE\", \"EURONEXT\"];\n\n\tasync validate_search_exchange_parameter(exchange) {\n\t\tif (!this.exchange_parameters.includes(exchange)) {\n\t\t\tthrow ReferenceError(URI`${exchange} is not valid, please select one of the following ${this.exchange_parameters}`)\n\t\t}\n\t}\n\n\tasync search(query, { exchange, ...searchParams }) {\n\t\tif (exchange) this.validate_search_exchange_parameter(exchange);\n\t\treturn this.get`search`({ query, exchange, ...searchParams })\n\t}\n\n\tasync financials_income_statement(symbol, searchParams) {\n\t\treturn this.get`financials/income-statement/${symbol}`(searchParams)\n\t}\n\n\tasync financials_balance_sheet_statement(symbol, searchParams) {\n\t\treturn this.get`financials/balance-sheet-statement/${symbol}`(searchParams)\n\t}\n\n\tasync financials_cash_flow_statement(symbol, searchParams) {\n\t\treturn this.get`financials/cash-flow-statement/${symbol}`(searchParams)\n\t}\n\n\tasync financial_ratios(symbol) {\n\t\treturn this.get`financial-ratios/${symbol}`()\n\t}\n\n\tasync enterprise_value(symbol, searchParams) {\n\t\treturn this.get`enterprise-value/${symbol}`(searchParams)\n\t}\n\n\tasync company_key_metrics(symbol, searchParams) {\n\t\treturn this.get`company-key-metrics/${symbol}`(searchParams)\n\t}\n\n\tasync financial_statement_growth(symbol, searchParams) {\n\t\treturn this.get`financial-statement-growth/${symbol}`(searchParams)\n\t}\n\n\tasync company_rating(symbol) {\n\t\treturn this.get`company/rating/${symbol}`()\n\t}\n\n\tasync company_discounted_cash_flow(symbol) {\n\t\treturn this.get`company/discounted-cash-flow/${symbol}`()\n\t}\n\n\tasync company_historical_discounted_cash_flow(symbol, searchParams) {\n\t\treturn this.get`company/historical-discounted-cash-flow/${symbol}`(searchParams)\n\t}\n\n\tasync company_stock_list() {\n\t\treturn this.get`company/stock/list`()\n\t}\n\n\tasync stock_real_time_price(symbol = '') {\n\t\treturn this.get`stock/real-time-price/${symbol}`()\n\t}\n\n\thistorical_chart_intervals = [\n\t\t'1min', '5min', '15min', '30min', '1hour'\n\t];\n\n\tasync validate_historical_chart_interval(interval) {\n\t\tif (!this.historical_chart_intervals.includes(interval)) {\n\t\t\tthrow ReferenceError(`${interval} is not valid, please select one of the following ${this.historical_chart_intervals}`)\n\t\t}\n\t}\n\n\tasync historical_chart(id, { interval }) {\n\t\tthis.validate_historical_chart_interval(interval);\n\t\treturn this.get`historical-chart/${interval}/${id}`()\n\t}\n\n\thistorical_price_full_serietypes = [\n\t\t'line'\n\t];\n\n\tasync validate_historical_price_full_serietype({ serietype }) {\n\t\tif (serietype && !this.historical_price_full_serietypes.includes(serietype)) {\n\t\t\tthrow ReferenceError(`${serietype} is not valid, please select one of the following ${this.historical_price_full_serietypes}`)\n\t\t}\n\t}\n\n\thistorical_price_full_groups = [\n\t\t'index',\n\t\t'commodity',\n\t\t'etf',\n\t\t'tsx',\n\t\t'euronext',\n\t\t'mutual_fund',\n\t\t'etf',\n\t\t'stock_dividend',\n\t\t'stock_split',\n\t\t'crypto',\n\t\t'forex'\n\t];\n\n\tasync validate_historical_price_full_group(group) {\n\t\tif (group && !this.historical_price_full_groups.includes(group)) {\n\t\t\tthrow ReferenceError(`${group} is not valid, please select one of the following ${this.historical_price_full_groups}`)\n\t\t}\n\t}\n\n\tasync historical_price_full(id, { group, ...searchParams }) {\n\t\tthis.validate_historical_price_full_serietype(searchParams);\n\t\tthis.validate_historical_price_full_group(group);\n\t\tconst group_path = group ? group + '/' : '';\n\t\treturn this.get`historical-price-full/${group_path}${id}`(searchParams)\n\t}\n\n\tasync majors_indexes(symbol = '') {\n\t\treturn this.get`majors-indexes/${symbol}`()\n\t}\n\n\tasync quotes(id) {\n\t\treturn this.get`quotes/${id}`()\n\t}\n\n\tasync symbol_available_indexes() {\n\t\treturn this.get`symbol/available-indexes`()\n\t}\n\n\n\tasync quotes_commodity(commodity) {\n\t\treturn this.get`quotes/${commodity}`()\n\t}\n\n\n\tasync historical_chart_PRNT({ interval, PRNT }) {\n\t\tthis.validate_historical_chart_interval(interval);\n\t\treturn this.get`historical-chart/${interval}/${PRNT}`()\n\t}\n\n\n\tstock_groups = [\n\t\t'actives', 'gainers', 'losers', 'sectors-performance'\n\t];\n\n\tasync validate_stock_groups(group) {\n\t\tif (!this.stock_groups.includes(group)) {\n\t\t\tthrow ReferenceError(`${group} is not valid, please select one of the following ${this.stock_groups}`)\n\t\t}\n\t}\n\n\tasync stock(group) {\n\t\tthis.validate_stock_groups(group);\n\t\treturn this.get`stock/${group}`()\n\t}\n\n\tasync is_the_market_open() {\n\t\treturn this.get`is-the-market-open`()\n\t}\n\n\tasync cryptocurrencies() {\n\t\treturn this.get`cryptocurrencies`()\n\t}\n\n\tasync cryptocurrency(symbol) {\n\t\treturn this.get`cryptocurrency/${symbol}`()\n\t}\n\n\tsymbol_groups = [\n\t\t'available-indexes',\n\t\t'available-commodities',\n\t\t'available-etfs',\n\t\t'available-mutual-funds',\n\t\t'available-euronext',\n\t\t'available-tsx',\n\t\t'available-cryptocurrencies',\n\t\t'available-forex-currency-pairs'\n\t];\n\n\tasync validate_symbol_group(group) {\n\t\tif (!this.symbol_groups.includes(group)) {\n\t\t\tthrow ReferenceError(`${group} is not valid, please select one of the following ${this.symbol_groups}`)\n\t\t}\n\t}\n\n\tasync symbol(group) {\n\t\tthis.validate_symbol_group(group);\n\t\treturn this.get`symbol/${group}`()\n\t}\n\n\tasync forex(currency_pair = '') {\n\t\treturn this.get`forex/${currency_pair}`()\n\t}\n\n\t// CompanySummary = {\n\t//  async \tprofile(symbol) {\n\t// \t\treturn this.company_profile(symbol)\n\t// \t},\n\t//  async \tquote(symbol) {\n\t// \t\treturn this.quote(symbol)\n\t// \t},\n\t//  async \tsearch(query, searchParams) {\n\t// \t\treturn this.search(query, searchParams)\n\t// \t},\n\t// \tfinancials: {\n\t// \t\tstatements: {\n\t// \t\t async \tincome_statement(symbol, searchParams) {\n\t// \t\t\t\treturn this.financials_income_statement(symbol, searchParams)\n\t// \t\t\t},\n\t//\n\t// \t\t async \tbalance_sheet_statement(symbol, searchParams) {\n\t// \t\t\t\treturn this.financials_balance_sheet_statement(symbol, searchParams)\n\t// \t\t\t},\n\t//\n\t// \t\t async \tcash_flow_statement(symbol, searchParams) {\n\t// \t\t\t\treturn this.financials_cash_flow_statement(symbol, searchParams)\n\t// \t\t\t},\n\t// \t\t async \tgrowth(symbol, searchParams) {\n\t// \t\t\t\treturn this.financial_statement_growth(symbol, searchParams)\n\t// \t\t\t}\n\t// \t\t},\n\t// \t async \tratios(symbol) {\n\t// \t\t\treturn this.financial_ratios(symbol)\n\t// \t\t}\n\t// \t},\n\t//  async \tkey_metrics(symbol, searchParams) {\n\t// \t\treturn this.company_key_metrics(symbol, searchParams)\n\t// \t},\n\t//  async \trating(symbol) {\n\t// \t\treturn this.company_rating(symbol)\n\t// \t},\n\t//  async \tdiscounted_cash_flow(symbol) {\n\t// \t\treturn this.discounted_cash_flow(symbol)\n\t// \t},\n\t//  async \thistorical_discounted_cash_flow(symbol, searchParams) {\n\t// \t\treturn this.company_historical_discounted_cash_flow(symbol, searchParams)\n\t// \t},\n\t//  async \tstock_list() {\n\t// \t\treturn this.company_stock_list()\n\t// \t},\n\t//  async \tstock_real_time_price(symbol) {\n\t// \t\treturn this.stock_real_time_price(symbol)\n\t// \t}\n\t// };\n\t// StockTimeSeries = {\n\t//\n\t// }\n}\n\nmodule.exports = FinancialModelingPrepAPI;"],"file":"index.js"}